<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="clober">

  <xacro:include filename="$(find clober_description)/urdf/include/tim571.urdf.xacro" />
  <xacro:include filename="$(find clober_description)/urdf/include/d435.urdf.xacro" />

  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="base_width" value="0.3" />
  <xacro:property name="base_length" value="0.3" />
  <xacro:property name="base_height" value="0.3" />
  <xacro:property name="wheel_radius" value="0.14" />
  <xacro:property name="wheel_width" value="0.06" />

  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0" izz="${(m/2) * (r*r)}" />
    </inertial>
  </xacro:macro>

  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0" />
  </material>
<!-- 
  <link name="map">
  
  <joint name="base_joint" type="fixed">
    <parent link="map" />
    <child link="base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint> -->


  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/clober.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/clober.dae" />
      </geometry>
    </collision>
    <xacro:box_inertia m="30.0" w="${base_width}" d="${base_length}" h="${base_height}" />
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="left_wheel_link" />
    <origin xyz="0 0.15 0.0016" rpy="0 0 0" />
    <axis xyz="0 1 0" rpy="0 0 0" />
  </joint>

  <link name="left_wheel_link">
    <visual>
      <origin xyz="0 -0.0234 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="3.0" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="right_wheel_link" />
    <origin xyz="0 -0.15 0.0016" rpy="0 0 0" />
    <axis xyz="0 1 0" rpy="0 0 0" />
  </joint>

  <link name="right_wheel_link">
    <visual>
      <origin xyz="0 0.0234 0" rpy="0 0 3.1415926535897931" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 3.1415926535897931" />
      <geometry>
        <mesh filename="file://$(find clober_description)/meshes/wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="3.0" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link" />
    <origin xyz="0.134 0 0.067" rpy="0 0 0" />
  </joint>

  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.03 0.03 0.01" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.03 0.03 0.01" />
      </geometry>
    </collision>
    <xacro:box_inertia m="0.1" w="0.03" d="0.03" h="0.01" />
  </link>

  <xacro:sensor_tim571 parent="base_link" min_angle="-1.74533" max_angle="1.74533" gazebo="true">
    <origin xyz="0.1592 0 0.2285" rpy="${PI} 0 0" />
  </xacro:sensor_tim571>

  <xacro:sensor_d435 parent="base_link" name="camera">
    <origin xyz="0.178 0 0.0686" rpy="0 -${PI/12} 0" />
  </xacro:sensor_d435>

  <!--joint name="front_left_ultrasonic_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_left_ultrasonic"/>
    <origin xyz="0.1956 0.0968 0.0865" rpy="0 0 0"/>
  </joint>

  <link name="front_left_ultrasonic"/>

  <joint name="front_right_ultrasonic_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_right_ultrasonic"/>
    <origin xyz="0.1956 -0.0968 0.0865" rpy="0 0 0"/>
  </joint>

  <link name="front_right_ultrasonic"/-->

  <!--ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <robot_sim_type>gazebo_ros2_control/GazeboSystem</robot_sim_type>
      <parameters>$(find clober_base)/config/clober.yaml</parameters>
    </plugin>
  </gazebo-->

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="gazebo_ros_diff_drive_controller">
      <update_rate>50</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.305</wheel_separation>
      <wheel_diameter>0.17</wheel_diameter>
      <max_wheel_torque>50</max_wheel_torque>
      <max_wheel_acceleration>2.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>odom:=odom</remapping>
      </ros>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
  </gazebo>

  <gazebo reference="left_wheel_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="right_wheel_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="gazebo_ros_imu_controller">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>imu_link</frame_name>
        <ros>
          <namespace>/imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

</robot>